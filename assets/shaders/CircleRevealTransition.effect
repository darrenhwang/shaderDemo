// Effect Syntax Guide: https://docs.cocos.com/creator/manual/zh/shader/index.html

CCEffect %{
  techniques:
  - name: opaque
    passes:
    - vert: unlit-vs:vert
      frag: unlit-fs:frag
      properties: &props
        mainTexture:    { value: white }
        mainColor:      { value: [1, 1, 1, 1], editor: { type: color } }
        progress:       { value: 0.0, range: [0.0, 1.0] }
        centerX:        { value: 0.5, range: [0.0, 1.0] }
        centerY:        { value: 0.5, range: [0.0, 1.0] }
        smoothness:     { value: 0.01, range: [0.001, 0.1] }
        reverse:        { value: false }
}%

CCProgram unlit-vs %{
  precision highp float;
  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  in vec2 a_uv0;
  
  out vec4 v_color;
  out vec2 v_uv0;

  void vert () {
    vec4 pos = vec4(a_position, 1);
    pos = cc_matViewProj * cc_matWorld * pos;

    v_uv0 = a_uv0;
    v_color = a_color;
    
    gl_Position = pos;
  }
}%

CCProgram unlit-fs %{
  precision highp float;
  #include <cc-global>
  
  in vec4 v_color;
  in vec2 v_uv0;

  uniform sampler2D mainTexture;
  
  uniform Constant {
    vec4 mainColor;
    float progress;
    float centerX;
    float centerY;
    float smoothness;
    bool reverse;
  };

  void frag () {
    vec4 color = texture(mainTexture, v_uv0) * v_color * mainColor;
    
    // 计算从中心点到当前点的距离
    vec2 center = vec2(centerX, centerY);
    float dist = distance(v_uv0, center);
    
    // 使用平滑步长函数创建圆形揭示效果
    float circle;
    
    if (reverse) {
      // 反向效果（从中心开始缩小）
      circle = 1.0 - smoothstep(progress - smoothness, progress, dist);
    } else {
      // 正向效果（从中心开始扩大）
      circle = smoothstep(progress - smoothness, progress, dist);
    }
    
    // 按圆形裁剪应用透明度
    color.a *= circle;
    
    gl_FragColor = color;
  }
}% 